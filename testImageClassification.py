from multimedbench.imageClassification import MIMIC_CXR_ImageClassification
import json
from multimedbench.utils import Params
from multimedbench.engine import MMB

params = Params(seed=42, batch_size=64)


def batcher(prompts):
    return ["Atelectasis, Cardiomegaly, Consolidation, Edema" for _ in range(len(prompts))]


engine = MMB(params=params, batcher=batcher)

engine.eval(["MIMIC-CXR-ImageClassification"])  # "CBIS-DDSM", "Pad-UFES-20", "VinDr-Mammo",


test = [
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
    [False, True, False, False, False],
]
test = [
    [],
    [False],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [],
    [False],
    [],
    [],
    [],
    [True, False, False, False],
    [True],
    [True, False],
    [True, False, False],
    [True, True, True, True],
    [True, True, True, True],
    [True],
    [True, True],
    [True, False],
    [True, True, True],
    [True, True, True],
    [True],
    [True, True],
    [True],
    [True, False],
    [False, True, False, False],
    [True, False, True],
    [True, False],
    [True, False],
    [True, True, True, True],
    [True, False],
    [True],
    [True],
    [True, True, True, True],
    [True, True, True, True],
    [True, True, False],
    [True, True, True, False],
    [True, False],
    [False, False, True],
    [False, True, False],
    [False, True, False],
    [True],
    [True, False],
    [True, True, True],
    [True],
    [False],
    [True],
    [True],
    [],
    [],
    [],
    [True],
    [True],
    [],
    [],
    [False],
    [False],
    [],
    [],
    [],
]
